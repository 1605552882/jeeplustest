/**
 * Copyright &copy; 2015-2020 <a href="http://www.jeeplus.org/">JeePlus</a> All rights reserved.
 */
package com.jeeplus.modules.faultcategorystatistic.service;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.jeeplus.core.persistence.Page;
import com.jeeplus.core.service.CrudService;
import com.jeeplus.modules.faultcategorystatistic.entity.Faultcategorystatistic;
import com.jeeplus.modules.faultcategorystatistic.mapper.FaultcategorystatisticMapper;

/**
 * 故障种类统计表Service
 * @author lxy
 * @version 2019-10-15
 */
@Service
@Transactional(readOnly = true)
public class FaultcategorystatisticService extends CrudService<FaultcategorystatisticMapper, Faultcategorystatistic> {
	@Autowired
	FaultcategorystatisticMapper faultcategorystatisticMapper;

	public Faultcategorystatistic get(String id) {
		return super.get(id);
	}
	
	public List<Faultcategorystatistic> findList(Faultcategorystatistic faultcategorystatistic) {
		return super.findList(faultcategorystatistic);
	}
	
	public Map<String, Object> findStatisticList(Faultcategorystatistic faultcategorystatistic) {
		Map<String,Object> result = new HashMap<String,Object>();
		//按天
		List<Faultcategorystatistic> list = super.findList(faultcategorystatistic);
		Date begin = faultcategorystatistic.getBeginCreateDate();//2019-09-03 00:00:00
		Date end = faultcategorystatistic.getEndCreateDate();//2019-09-06 23:59:59
		
		//分类 全部还是指定的
		List<String> faultcategoryList = new ArrayList<String>();
		if(faultcategorystatistic.getFaultcategory()!=null && !faultcategorystatistic.getFaultcategory().equals("")) {
			faultcategoryList.add(faultcategorystatistic.getFaultcategory());
		}else {
			faultcategoryList = findFaultcategory();
		}
		result.put("faultcategoryList", faultcategoryList);
		
		//间隔天数
		List<Date> dateList = getDate(begin, end);
		List<String> datefmt = new ArrayList<String>();
		SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
		for(int j=0; j<dateList.size(); j++) {
			datefmt.add(dateFormat.format(dateList.get(j)));
		}
		result.put("datefmt", datefmt);
		
		//初始化
		String[][] data = null;
		int faultcategorySize = dateList.size();
		int dateSize = dateList.size();
		if(faultcategorySize>0 && dateSize>0) {
			data = new String[faultcategoryList.size()][dateList.size()];
			for(int k=0; k<faultcategoryList.size(); k++) {
				for(int j=0; j<dateList.size(); j++) {
					data[k][j] = "0";
				}
			}
		}

		//放数据
		for(int i=0; i<list.size(); i++) {//全部数据
			Faultcategorystatistic item = list.get(i);
			Date createDate = item.getCreateDate();
			String faultcategory = item.getFaultcategory();
			String times = item.getTimes();
			for(int j=0; j<dateList.size(); j++) {
				if(createDate.getTime()-dateList.get(j).getTime()>=0 && createDate.getTime()-dateList.get(j).getTime()<24*60*60*1000) {
					data[faultcategoryList.indexOf(faultcategory)][j] = times;
				}
			}
		}
		result.put("data", data);
		
		//按月
		return result;
	}
	
	/**
	 * 开始日期到结束日期中的每一天
	 * @param begin
	 * @param end
	 * @return
	 */
	public List<Date> getDate(Date begin, Date end){
		List<Date> list = new ArrayList<Date>();
		Date temp = new Date(begin.getTime());
		while(end.getTime()-temp.getTime()>0) {
			list.add(temp);
			temp = new Date(temp.getTime()+24*60*60*1000);
		}
		return list;
	}

	public List<String> findFaultcategory() {
		return faultcategorystatisticMapper.findFaultcategorysResult();
	}

	public List<Faultcategorystatistic> findMonth(Faultcategorystatistic faultcategorystatistic) {
		return faultcategorystatisticMapper.findMonth(faultcategorystatistic);
	}

}