/**
 * Copyright &copy; 2015-2020 <a href="http://www.jeeplus.org/">JeePlus</a> All rights reserved.
 */
package com.jeeplus.modules.faultcategorystatistic.web;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.jeeplus.common.json.AjaxJson;
import com.jeeplus.core.web.BaseController;
import com.jeeplus.common.utils.StringUtils;
import com.jeeplus.modules.faultcategorystatistic.entity.Faultcategorystatistic;
import com.jeeplus.modules.faultcategorystatistic.service.FaultcategorystatisticService;

/**
 * 故障种类统计表Controller
 * @author lxy
 * @version 2019-10-15
 */
@Controller
@RequestMapping(value = "${adminPath}/faultcategorystatistic/faultcategorystatistic")
public class FaultcategorystatisticController extends BaseController {

	@Autowired
	private FaultcategorystatisticService faultcategorystatisticService;
	
	@ModelAttribute
	public Faultcategorystatistic get(@RequestParam(required=false) String id) {
		Faultcategorystatistic entity = null;
		if (StringUtils.isNotBlank(id)){
			entity = faultcategorystatisticService.get(id);
		}
		if (entity == null){
			entity = new Faultcategorystatistic();
		}
		return entity;
	}
	
	/**
	 * 表单统计列表数据
		 * @throws ParseException 
	 */
	@ResponseBody
	@RequestMapping(value = "btData")
	public AjaxJson btData(Faultcategorystatistic faultcategorystatistic, HttpServletRequest request, HttpServletResponse response, Model model) throws ParseException {
		AjaxJson j = new AjaxJson();
		SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		Date today = new Date();
		//获取前一天
		Calendar ca = Calendar.getInstance();
		ca.setTime(today);
		ca.add(Calendar.DAY_OF_MONTH, -1);
		String creatTime = df.format(ca.getTime()) + " 00:00:00"; //df.format(ca.getTime());
		Date date = sdf.parse(creatTime);
		faultcategorystatistic.setCreateDate(date);
		List<Faultcategorystatistic> document = faultcategorystatisticService.findList(faultcategorystatistic);
		j.setSuccess(true);
		j.setMsg("保存成功!");
		j.put("document", document);
		return j;
	}
}