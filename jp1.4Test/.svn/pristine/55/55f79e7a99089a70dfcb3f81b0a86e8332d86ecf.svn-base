/**
 * Copyright &copy; 2015-2020 <a href="http://www.jeeplus.org/">JeePlus</a> All rights reserved.
 */
package com.jeeplus.modules.checkresult.web;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.validation.ConstraintViolationException;

import org.apache.shiro.authz.annotation.Logical;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.google.common.collect.Lists;
import com.jeeplus.common.utils.DateUtils;
import com.jeeplus.common.config.Global;
import com.jeeplus.common.json.AjaxJson;
import com.jeeplus.core.persistence.Page;
import com.jeeplus.core.web.BaseController;
import com.jeeplus.common.utils.StringUtils;
import com.jeeplus.common.utils.excel.ExportExcel;
import com.jeeplus.common.utils.excel.ImportExcel;
import com.jeeplus.modules.checkresult.entity.Checkresult;
import com.jeeplus.modules.checkresult.service.CheckresultService;

/**
 * 人工检测结果Controller
 * @author lxy
 * @version 2019-08-19
 */
@Controller
@RequestMapping(value = "${adminPath}/checkresult/checkresult")
public class CheckresultController extends BaseController {

	@Autowired
	private CheckresultService checkresultService;
	
	@ModelAttribute
	public Checkresult get(@RequestParam(required=false) String id) {
		Checkresult entity = null;
		if (StringUtils.isNotBlank(id)){
			entity = checkresultService.get(id);
		}
		if (entity == null){
			entity = new Checkresult();
		}
		return entity;
	}
	
	/**
	 * 人工检测结果列表页面
	 */
	@RequiresPermissions("checkresult:checkresult:list")
	@RequestMapping(value = {"list", ""})
	public String list() {
		return "modules/checkresult/checkresultList";
	}
	
	/**
	 * 人工检测结果列表数据
	 */
	@ResponseBody
	@RequiresPermissions("checkresult:checkresult:list")
	@RequestMapping(value = "data")
	public Map<String, Object> data(Checkresult checkresult, HttpServletRequest request, HttpServletResponse response, Model model) {
		Page<Checkresult> page = checkresultService.findPage(new Page<Checkresult>(request, response), checkresult); 
		return getBootstrapData(page);
	}

	/**
	 * 查看，增加，编辑人工检测结果表单页面
	 */
	@RequiresPermissions(value={"checkresult:checkresult:view","checkresult:checkresult:add","checkresult:checkresult:edit"},logical=Logical.OR)
	@RequestMapping(value = "form")
	public String form(Checkresult checkresult, Model model) {
		model.addAttribute("checkresult", checkresult);
		if(StringUtils.isBlank(checkresult.getId())){//如果ID是空为添加
			model.addAttribute("isAdd", true);
		}
		return "modules/checkresult/checkresultForm";
	}

	/**
	 * 保存人工检测结果
	 */
	@RequiresPermissions(value={"checkresult:checkresult:add","checkresult:checkresult:edit"},logical=Logical.OR)
	@RequestMapping(value = "save")
	public String save(Checkresult checkresult, Model model, RedirectAttributes redirectAttributes) throws Exception{
		/*
		 * if (!beanValidator(model, checkresult)){ return form(checkresult, model); }
		 */
		//新增或编辑表单保存
		checkresultService.save(checkresult);//保存
		addMessage(redirectAttributes, "保存人工检测结果成功");
		return "redirect:"+Global.getAdminPath()+"/checkresult/checkresult/?repage";
	}
	
	/**
	 * 删除人工检测结果
	 */
	@ResponseBody
	@RequiresPermissions("checkresult:checkresult:del")
	@RequestMapping(value = "delete")
	public AjaxJson delete(Checkresult checkresult, RedirectAttributes redirectAttributes) {
		AjaxJson j = new AjaxJson();
		checkresultService.delete(checkresult);
		j.setMsg("删除人工检测结果成功");
		return j;
	}
	
	/**
	 * 批量删除人工检测结果
	 */
	@ResponseBody
	@RequiresPermissions("checkresult:checkresult:del")
	@RequestMapping(value = "deleteAll")
	public AjaxJson deleteAll(String ids, RedirectAttributes redirectAttributes) {
		AjaxJson j = new AjaxJson();
		String idArray[] =ids.split(",");
		for(String id : idArray){
			checkresultService.delete(checkresultService.get(id));
		}
		j.setMsg("删除人工检测结果成功");
		return j;
	}
	
	/**
	 * 导出excel文件
	 */
	@ResponseBody
	@RequiresPermissions("checkresult:checkresult:export")
    @RequestMapping(value = "export", method=RequestMethod.POST)
    public AjaxJson exportFile(Checkresult checkresult, HttpServletRequest request, HttpServletResponse response, RedirectAttributes redirectAttributes) {
		AjaxJson j = new AjaxJson();
		try {
            String fileName = "人工检测结果"+DateUtils.getDate("yyyyMMddHHmmss")+".xlsx";
            Page<Checkresult> page = checkresultService.findPage(new Page<Checkresult>(request, response, -1), checkresult);
    		new ExportExcel("人工检测结果", Checkresult.class).setDataList(page.getList()).write(response, fileName).dispose();
    		j.setSuccess(true);
    		j.setMsg("导出成功！");
    		return j;
		} catch (Exception e) {
			j.setSuccess(false);
			j.setMsg("导出人工检测结果记录失败！失败信息："+e.getMessage());
		}
			return j;
    }

}