<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.documentdetect.mapper.DocumentarydetailsMapper">
    
	<sql id="documentarydetailsColumns">
		a.id AS "id",
		a.sbillno AS "sbillno",
		a.sfaulttitle AS "sfaulttitle",
		a.sfaultcategory AS "sfaultcategory",
		a.sfaultrepresent AS "sfaultrepresent",
		a.srepfaultdetail AS "srepfaultdetail",
		a.sprocesssummary AS "sprocesssummary",
		a.sfaultcauseid AS "sfaultcauseid",
		a.sansquaeval AS "sansquaeval",
		a.dremaintimetimit AS "dremaintimetimit",
		a.dfaulttimelimit AS "dfaulttimelimit",
		a.ddurtime AS "ddurtime",
		a.dntfaultime AS "dntfaultime",
		a.dntiremain AS "dntiremain",
		a.dfaultapttime AS "dfaultapttime",
		a.dfirstreptime AS "dfirstreptime",
		a.darchivetime AS "darchivetime",
		a.report_time AS "reportTime",
		a.remarks AS "remarks",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="documentarydetailsJoins">
		
	</sql>
	
	<select id="getRepetitiveBySbillno" resultType="Documentarydetails" >
		SELECT 
			<include refid="documentarydetailsColumns"/>
		FROM documentarydetails a
		<include refid="documentarydetailsJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="sbillno != null and sbillno != ''">
				AND a.sbillno LIKE 
					<if test="dbName == 'oracle'">'%'||#{sbillno}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{sbillno}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{sbillno},'%')</if>
			</if>
			
			<if test="beginReportTime != null and endReportTime != null and beginReportTime != '' and endReportTime != ''">
				AND a.report_time BETWEEN #{beginReportTime} AND #{endReportTime}
			</if>
		</where>
		ORDER BY a.report_time DESC
	</select>
	
    
	<select id="get" resultType="Documentarydetails" >
		SELECT 
			<include refid="documentarydetailsColumns"/>
		FROM documentarydetails a
		<include refid="documentarydetailsJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="getIdBySbillno" resultType="Documentarydetails" >
		SELECT 
			<include refid="documentarydetailsColumns"/>
		FROM documentarydetails a
		<include refid="documentarydetailsJoins"/>
		WHERE a.sbillno = #{sbillno}
	</select>
	
	<select id="findList" resultType="Documentarydetails" >
		SELECT 
			<include refid="documentarydetailsColumns"/>
		FROM documentarydetails a
		<include refid="documentarydetailsJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="sbillno != null and sbillno != ''">
				AND a.sbillno LIKE 
					<if test="dbName == 'oracle'">'%'||#{sbillno}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{sbillno}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{sbillno},'%')</if>
			</if>
			<if test="srepfaultdetail != null and srepfaultdetail != ''">
				AND a.srepfaultdetail LIKE 
					<if test="dbName == 'oracle'">'%'||#{srepfaultdetail}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{srepfaultdetail}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{srepfaultdetail},'%')</if>
			</if>
			<if test="sfaultcategory != null and sfaultcategory != ''">
				AND a.sfaultcategory LIKE 
					<if test="dbName == 'oracle'">'%'||#{sfaultcategory}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{sfaultcategory}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{sfaultcategory},'%')</if>
			</if>
			<if test="beginReportTime != null and endReportTime != null and beginReportTime != '' and endReportTime != ''">
				AND a.report_time BETWEEN #{beginReportTime} AND #{endReportTime}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Documentarydetails" >
		SELECT 
			<include refid="documentarydetailsColumns"/>
		FROM documentarydetails a
		<include refid="documentarydetailsJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO documentarydetails(
			id,
			sbillno,
			sfaulttitle,
			sfaultcategory,
			sfaultrepresent,
			srepfaultdetail,
			sprocesssummary,
			sfaultcauseid,
			sansquaeval,
			dremaintimetimit,
			dfaulttimelimit,
			ddurtime,
			dntfaultime,
			dntiremain,
			dfaultapttime,
			dfirstreptime,
			darchivetime,
			report_time,
			remarks,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{sbillno},
			#{sfaulttitle},
			#{sfaultcategory},
			#{sfaultrepresent},
			#{srepfaultdetail},
			#{sprocesssummary},
			#{sfaultcauseid},
			#{sansquaeval},
			#{dremaintimetimit},
			#{dfaulttimelimit},
			#{ddurtime},
			#{dntfaultime},
			#{dntiremain},
			#{dfaultapttime},
			#{dfirstreptime},
			#{darchivetime},
			#{reportTime},
			#{remarks},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE documentarydetails SET 	
			sbillno = #{sbillno},
			sfaulttitle = #{sfaulttitle},
			sfaultcategory = #{sfaultcategory},
			sfaultrepresent = #{sfaultrepresent},
			srepfaultdetail = #{srepfaultdetail},
			sprocesssummary = #{sprocesssummary},
			sfaultcauseid = #{sfaultcauseid},
			sansquaeval = #{sansquaeval},
			dremaintimetimit = #{dremaintimetimit},
			dfaulttimelimit = #{dfaulttimelimit},
			ddurtime = #{ddurtime},
			dntfaultime = #{dntfaultime},
			dntiremain = #{dntiremain},
			dfaultapttime = #{dfaultapttime},
			dfirstreptime = #{dfirstreptime},
			darchivetime = #{darchivetime},
			report_time = #{reportTime},
			remarks = #{remarks},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM documentarydetails
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE documentarydetails SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="Documentarydetails" statementType="STATEMENT">
		select * FROM documentarydetails  where ${propertyName} = '${value}'
	</select>
	
	<!-- 根据故障种类和故障时间获取原始工单列表 -->
	<select id="findFaultCategoryDataList" resultType="Documentarydetails">
		SELECT 
			<include refid="documentarydetailsColumns"/>
		FROM documentarydetails a
		<include refid="documentarydetailsJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			
			<if test="sfaultcategory != null and sfaultcategory != ''">
				AND 
				(
				right(sfaultcategory,CHAR_LENGTH(concat(#{sfaultcategory},'/')))=concat(#{sfaultcategory},'/')
				OR
				sfaultcategory = #{sfaultcategory}
				)
			</if>
			<if test="beginReportTime != null and endReportTime != null and beginReportTime != '' and endReportTime != ''">
				AND a.report_time BETWEEN #{beginReportTime} AND #{endReportTime}
			</if>
			<if test="city != null and city != '' and city!='WH'">
				AND left(a.sbillno,char_length(#{city}))=#{city}
			</if>
			<if test="city == 'WH'">
				AND left(a.sbillno,char_length(#{city})) not in (
				'SJ','GD','GZ','SG','HY','MZ','HZ','SW','DG','ZS','JM','YJ',
				'ZJ','MM','ZQ','QY','ZZ','JY','YF','ST','FS','ZH','SZ')
			</if>
			<if test="uselessFaultcategory!=null and uselessFaultcategory.size() > 0">
			  and substring_index(substring_index(sfaultcategory,'/',-2),'/',1) not in
			  <foreach item="item" index="index" collection="uselessFaultcategory" open="(" separator="," close=")">  
			    concat(#{item},'/'),#{item}
			  </foreach>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
</mapper>