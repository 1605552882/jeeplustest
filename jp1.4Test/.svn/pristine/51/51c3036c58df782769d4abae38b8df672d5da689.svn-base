<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.faultcategorystatistic.mapper.FaultcategorystatisticMapper">
    
	<sql id="faultcategorystatisticColumns">
		a.id AS "id",
		a.faultcategory AS "faultcategory",
		a.times AS "times",
		a.remarks AS "remarks",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="faultcategorystatisticJoins">
		
	</sql>
	
    
	<select id="get" resultType="Faultcategorystatistic" >
		SELECT 
			<include refid="faultcategorystatisticColumns"/>
		FROM faultcategorystatistic a
		<include refid="faultcategorystatisticJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="Faultcategorystatistic" >
		SELECT 
			<include refid="faultcategorystatisticColumns"/>
		FROM faultcategorystatistic a
		<include refid="faultcategorystatisticJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="faultcategory != null and  faultcategory != '' ">
				AND a.faultcategory = #{faultcategory}
			</if>
			<if test="createDate != null and  createDate != '' ">
				AND a.create_date = #{createDate}
			</if>
			<if test="beginCreateDate != null and endCreateDate != null and beginCreateDate != '' and endCreateDate != ''">
				AND a.create_date BETWEEN #{beginCreateDate} AND #{endCreateDate}
			</if>
		</where>
		ORDER BY a.times desc
	</select>

		<select id="findMonth" resultType="Faultcategorystatistic" >
		<include refid="faultcategorystatisticJoins"/>
		SELECT 
			faultcategory, 
			SUM(times) as times,
			#{createDate} as createDate
		FROM faultcategorystatistic a
		<where>
			a.create_date BETWEEN  DATE_FORMAT(DATE_add(#{createDate},INTERVAL 0 month) ,'%Y-%m-01 00:00:00')
			AND   date_add(date_sub(date_format(#{createDate},'%Y-%m-%d 23:59:59'),interval extract( day from now()) day),interval 1 month)
		</where>
		GROUP BY faultcategory  ORDER BY times desc
	</select>
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="Faultcategorystatistic" statementType="STATEMENT">
		select * FROM faultcategorystatistic  where ${propertyName} = '${value}'
	</select>
	
	<!-- 获取故障种类 -->
	<select id="findFaultcategorysResult" resultType="string" >
		select DISTINCT faultcategory from faultcategorystatistic
	</select>


</mapper>