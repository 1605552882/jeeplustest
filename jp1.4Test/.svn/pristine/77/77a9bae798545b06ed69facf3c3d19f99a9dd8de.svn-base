<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.documentdetect.mapper.DocumentarydetailsMapper">
    
	<sql id="documentarydetailsColumns">
		a.id AS "id",
		a.sbillno AS "sbillno",
		a.sfaulttitle AS "sfaulttitle",
		a.phone AS "phone",
		a.sfaultcategory AS "sfaultcategory",
		a.sfaultrepresent AS "sfaultrepresent",
		a.srepfaultdetail AS "srepfaultdetail",
		a.sprocesssummary AS "sprocesssummary",
		a.sfaultcauseid AS "sfaultcauseid",
		a.sansquaeval AS "sansquaeval",
		a.dremaintimetimit AS "dremaintimetimit",
		a.dfaulttimelimit AS "dfaulttimelimit",
		a.ddurtime AS "ddurtime",
		a.dntfaultime AS "dntfaultime",
		a.dntiremain AS "dntiremain",
		a.dfaultapttime AS "dfaultapttime",
		a.dfirstreptime AS "dfirstreptime",
		a.darchivetime AS "darchivetime",
		a.report_time AS "reportTime",
		a.sStatus AS "sStatus",
		a.sReportsubarea AS "sReportsubarea",
		a.iSource AS "iSource",
		a.remarks AS "remarks",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="documentarydetailsJoins">
		
	</sql>
	
	<select id="getRepetitiveBySbillno" resultType="Documentarydetails" >
		SELECT 
			<include refid="documentarydetailsColumns"/>
		FROM documentarydetails a
		<include refid="documentarydetailsJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="sbillno != null and sbillno != ''">
				AND a.sbillno LIKE 
					<if test="dbName == 'oracle'">'%'||#{sbillno}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{sbillno}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{sbillno},'%')</if>
			</if>
			
			<if test="beginReportTime != null and endReportTime != null and beginReportTime != '' and endReportTime != ''">
				AND a.report_time BETWEEN #{beginReportTime} AND #{endReportTime}
			</if>
		</where>
		ORDER BY a.report_time DESC
	</select>
	
    
	<select id="get" resultType="Documentarydetails" >
		SELECT 
			<include refid="documentarydetailsColumns"/>
		FROM documentarydetails a
		<include refid="documentarydetailsJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="getIdBySbillno" resultType="Documentarydetails" >
		SELECT 
			<include refid="documentarydetailsColumns"/>
		FROM documentarydetails a
		<include refid="documentarydetailsJoins"/>
		WHERE a.sbillno = #{sbillno}
	</select>
	
	
	<!-- 故障内容srepfaultdetail和结单信息sprocesssummary是或关系，使用场景为热点问题统计 -->
	<select id="findHotList" resultType="Documentarydetails" >
		SELECT 
			<include refid="documentarydetailsColumns"/>
		<!-- 只查询热词 -->
		<if test="hotword != null and hotword != ''">
			FROM documentarydetails a
			<where>
				 a.srepfaultdetail LIKE 
					<if test="dbName == 'oracle'">'%'||#{hotword}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{hotword}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{hotword},'%')</if>
				<if test="beginReportTime != null and endReportTime != null and beginReportTime != '' and endReportTime != ''">
					AND a.report_time BETWEEN #{beginReportTime} AND #{endReportTime}
				</if>
				<if test="sStatus != null and sStatus != ''">
					AND a.sStatus = #{sStatus}
				</if>
			</where>
		</if>
		<if test="(srepfaultdetail != null and srepfaultdetail != '') and (sprocesssummary != null and sprocesssummary != '')">
			FROM (SELECT 
				*,
				match(srepfaultdetail) against('+(${srepfaultdetail})' )  as score,
				match(sprocesssummary) against('+(${sprocesssummary})' )  as score2 
				from documentarydetails
				where match(srepfaultdetail,sprocesssummary) against('+(${srepfaultdetail} ${sprocesssummary})' IN BOOLEAN MODE) 
				<if test="beginReportTime != null and endReportTime != null and beginReportTime != '' and endReportTime != ''">
					AND report_time BETWEEN #{beginReportTime} AND #{endReportTime}
				</if>
				<if test="sStatus != null and sStatus != ''">
					AND a.sStatus = #{sStatus}
				</if>
				) a where 
				<!-- 或 -->
				<if test="relation == 0">
					a.score>0  or  a.score2 > 0
				</if>
				<!--与 -->
				<if test="relation == 1">
					a.score>0  and  a.score2 > 0
				</if>
		
		</if>
		<if test="(srepfaultdetail != null and srepfaultdetail != '') and  (sprocesssummary == null or sprocesssummary == '')">
			FROM (SELECT *,match(srepfaultdetail) against('+(${srepfaultdetail})' )  as score
				from documentarydetails
				where match(srepfaultdetail) against('+${srepfaultdetail}' IN BOOLEAN MODE) 
				 <if test="beginReportTime != null and endReportTime != null and beginReportTime != '' and endReportTime != ''">
					AND report_time BETWEEN #{beginReportTime} AND #{endReportTime}
				</if>
				<if test="sStatus != null and sStatus != ''">
					AND a.sStatus = #{sStatus}
				</if>
				) a where a.score>0
		</if>
		<if test="(srepfaultdetail == null or srepfaultdetail == '') and (sprocesssummary != null and sprocesssummary != '')">
			FROM (SELECT *,
				match(sprocesssummary) against('+(${sprocesssummary})')  as score2 
				from documentarydetails
				where match(sprocesssummary) against('+${sprocesssummary}' IN BOOLEAN MODE) 
				<if test="beginReportTime != null and endReportTime != null and beginReportTime != '' and endReportTime != ''">
					AND report_time BETWEEN #{beginReportTime} AND #{endReportTime}
				</if>
				<if test="sStatus != null and sStatus != ''">
					AND a.sStatus = #{sStatus}
				</if>
				) a where a.score2 > 0
		</if>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.report_time DESC
			</otherwise>
		</choose>
	</select>
	
	<!-- 故障内容srepfaultdetail和结单信息sprocesssummary是或关系，使用场景为热点问题统计 -->
	<select id="findList" resultType="Documentarydetails" >
		SELECT 
			<include refid="documentarydetailsColumns"/>
		FROM documentarydetails a
		<include refid="documentarydetailsJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="sbillno != null and sbillno != ''">
				AND a.sbillno LIKE 
					<if test="dbName == 'oracle'">'%'||#{sbillno}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{sbillno}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{sbillno},'%')</if>
			</if>
			<if test="sStatus != null and sStatus != ''">
				AND a.sStatus = #{sStatus}
			</if>
			
			<if test="(srepfaultdetail != null and srepfaultdetail != '') or (sprocesssummary != null and sprocesssummary != '')">
				AND(1=0
					<if test="srepfaultdetail != null and srepfaultdetail != ''">
						OR a.srepfaultdetail LIKE 
							<if test="dbName == 'oracle'">'%'||#{srepfaultdetail}||'%'</if>
							<if test="dbName == 'mssql'">'%'+#{srepfaultdetail}+'%'</if>
							<if test="dbName == 'mysql'">concat('%',#{srepfaultdetail},'%')</if>
					</if>
					<if test="sprocesssummary != null and sprocesssummary != ''">
						OR a.sprocesssummary LIKE 
							<if test="dbName == 'oracle'">'%'||#{sprocesssummary}||'%'</if>
							<if test="dbName == 'mssql'">'%'+#{sprocesssummary}+'%'</if>
							<if test="dbName == 'mysql'">concat('%',#{sprocesssummary},'%')</if>
					</if>
				)
			</if>
			
			<if test="sfaultcategory != null and sfaultcategory != ''">
				AND a.sfaultcategory LIKE 
					<if test="dbName == 'oracle'">'%'||#{sfaultcategory}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{sfaultcategory}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{sfaultcategory},'%')</if>
			</if>
			<if test="hotword != null and hotword != ''">
				AND a.srepfaultdetail LIKE 
					<if test="dbName == 'oracle'">'%'||#{hotword}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{hotword}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{hotword},'%')</if>
			</if>
			<if test="beginReportTime != null and endReportTime != null and beginReportTime != '' and endReportTime != ''">
				AND a.report_time BETWEEN #{beginReportTime} AND #{endReportTime}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	
	<select id="findAllList" resultType="Documentarydetails" >
		SELECT 
			<include refid="documentarydetailsColumns"/>
		FROM documentarydetails a
		<include refid="documentarydetailsJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO documentarydetails(
			id,
			sbillno,
			sfaulttitle,
			sfaultcategory,
			sfaultrepresent,
			srepfaultdetail,
			sprocesssummary,
			sfaultcauseid,
			sansquaeval,
			dremaintimetimit,
			dfaulttimelimit,
			ddurtime,
			dntfaultime,
			dntiremain,
			dfaultapttime,
			dfirstreptime,
			darchivetime,
			report_time,
			remarks,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{sbillno},
			#{sfaulttitle},
			#{sfaultcategory},
			#{sfaultrepresent},
			#{srepfaultdetail},
			#{sprocesssummary},
			#{sfaultcauseid},
			#{sansquaeval},
			#{dremaintimetimit},
			#{dfaulttimelimit},
			#{ddurtime},
			#{dntfaultime},
			#{dntiremain},
			#{dfaultapttime},
			#{dfirstreptime},
			#{darchivetime},
			#{reportTime},
			#{remarks},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE documentarydetails SET 	
			sbillno = #{sbillno},
			sfaulttitle = #{sfaulttitle},
			sfaultcategory = #{sfaultcategory},
			sfaultrepresent = #{sfaultrepresent},
			srepfaultdetail = #{srepfaultdetail},
			sprocesssummary = #{sprocesssummary},
			sfaultcauseid = #{sfaultcauseid},
			sansquaeval = #{sansquaeval},
			dremaintimetimit = #{dremaintimetimit},
			dfaulttimelimit = #{dfaulttimelimit},
			ddurtime = #{ddurtime},
			dntfaultime = #{dntfaultime},
			dntiremain = #{dntiremain},
			dfaultapttime = #{dfaultapttime},
			dfirstreptime = #{dfirstreptime},
			darchivetime = #{darchivetime},
			report_time = #{reportTime},
			remarks = #{remarks},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM documentarydetails
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE documentarydetails SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="Documentarydetails" statementType="STATEMENT">
		select * FROM documentarydetails  where ${propertyName} = '${value}'
	</select>
	
	<!-- 根据故障种类和故障时间获取原始工单列表 -->
	<select id="findFaultCategoryDataList" resultType="Documentarydetails">
		SELECT 
			<include refid="documentarydetailsColumns"/>
		FROM documentarydetails a
		<include refid="documentarydetailsJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			
			<if test="sfaultcategory != null and sfaultcategory != ''">
				AND 
				substring_index(substring_index(sfaultcategory,'/',-2),'/',1)  like '%${sfaultcategory}%'
			</if>
			<if test="beginReportTime != null and endReportTime != null and beginReportTime != '' and endReportTime != ''">
				AND a.report_time BETWEEN #{beginReportTime} AND #{endReportTime}
			</if>
			<if test="city != null and city != '' and city!='WH' and city!='IT'">
				AND left(a.sbillno,char_length(#{city}))=#{city}
			</if>
			<if test="city == 'IT'">
				AND left(a.sbillno,char_length(#{city}))='SJ'
			</if>
			<if test="city == 'WH'">
				AND left(a.sbillno,char_length(#{city})) not in (
				'SJ','GZ','SG','HY','MZ','HZ','SW','DG','ZS','JM','YJ',
				'ZJ','MM','ZQ','QY','ZZ','JY','YF','ST','FS','ZH','SZ')
				AND left(a.sbillno,5) not in ('GDNOC')
			</if>
			<if test="uselessFaultcategory!=null and uselessFaultcategory.size() > 0">
				and
			  <foreach item="item" index="index" collection="uselessFaultcategory" open="(" separator="and" close=")">  
			    substring_index(substring_index(sfaultcategory,'/',-2),'/',1) not like '%${item}%'
			  </foreach>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
</mapper>